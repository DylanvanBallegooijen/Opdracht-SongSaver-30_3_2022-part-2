{"ast":null,"code":"var _jsxFileName = \"/Users/dylan/Opdracht songSaver/src/components/SongOverview.js\";\nimport React, { Component } from 'react';\nimport SongForm from './SongForm';\nimport SongList from './SongList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass SongOverview extends Component {\n  constructor() {\n    super();\n\n    this.addSong = song => {\n      const addedSong = {\n        id: this.state.songs.length + 1,\n        title: song.title,\n        artist: song.artist,\n        genre: song.genre,\n        rating: song.rating\n      };\n      this.setState({\n        songs: this.state.songs.concat(addedSong)\n      });\n    };\n\n    this.sortSong = key => {\n      const songList = [...this.state.songs];\n      songList.sort((a, b) => a[key].toLowerCase() < b[key].toLowerCase() ? -1 : 1);\n      this.setState({\n        songs: songList\n      });\n    };\n\n    this.sortSongReversed = key => {\n      const songList = [...this.state.songs];\n      songList.sort((a, b) => a[key].toLowerCase() < b[key].toLowerCase() ? 1 : -1);\n      this.setState({\n        songs: songList\n      });\n    };\n\n    this.state = {\n      songs: [{\n        id: 1,\n        title: \"In da club\",\n        artist: \"50 Cent\",\n        genre: \"HipHop\",\n        rating: \"5\"\n      }, {\n        id: 2,\n        title: \"Smells like teen spirit\",\n        artist: \"Nirvana\",\n        genre: \"Rock\",\n        rating: \"4\"\n      }, {\n        id: 3,\n        title: \"Waterfalls\",\n        artist: \"TLC\",\n        genre: \"RnB\",\n        rating: \"3\"\n      }]\n    };\n    this.addSong = this.addSong.bind(this);\n    this.removeSong = this.removeSong.bind(this);\n    this.removeList = this.removeList.bind(this);\n    this.sortSong = this.sortSong.bind(this);\n    this.sortSongReversed = this.sortSongReversed.bind(this);\n  } //Add Song\n\n\n  //Remove Song\n  removeSong(id) {\n    const newList = this.state.songs.filter(song => {\n      return id !== Number(song.id);\n    });\n    this.setState({\n      songs: newList\n    });\n  } //Remove All Songs\n\n\n  removeList() {\n    this.setState({\n      songs: []\n    });\n  } //Sort Songs(title), Artist, Genre, Rating \n\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"song-container\",\n      children: [/*#__PURE__*/_jsxDEV(SongForm, {\n        addSong: this.addSong\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(SongList, {\n        songs: this.state.songs,\n        addSong: this.addSong,\n        removeList: this.removeList,\n        removeSong: this.removeSong,\n        sortSong: this.sortSong,\n        sortSongReversed: this.sortSongReversed\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default SongOverview;","map":{"version":3,"sources":["/Users/dylan/Opdracht songSaver/src/components/SongOverview.js"],"names":["React","Component","SongForm","SongList","SongOverview","constructor","addSong","song","addedSong","id","state","songs","length","title","artist","genre","rating","setState","concat","sortSong","key","songList","sort","a","b","toLowerCase","sortSongReversed","bind","removeSong","removeList","newList","filter","Number","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport SongForm from './SongForm';\nimport SongList from './SongList';\n\nclass SongOverview extends Component {\n    constructor() {\n        super()\n        this.state = {\n            songs: [\n                {\n                    id: 1,\n                    title: \"In da club\",\n                    artist: \"50 Cent\",\n                    genre: \"HipHop\",\n                    rating: \"5\"\n                },\n                {\n                    id: 2,\n                    title: \"Smells like teen spirit\",\n                    artist: \"Nirvana\",\n                    genre: \"Rock\",\n                    rating: \"4\"\n                },\n                {\n                    id: 3,\n                    title: \"Waterfalls\",\n                    artist: \"TLC\",\n                    genre: \"RnB\",\n                    rating: \"3\"\n                },\n            ]\n        }\n\n        this.addSong = this.addSong.bind(this)\n        this.removeSong = this.removeSong.bind(this)\n        this.removeList = this.removeList.bind(this)\n        this.sortSong = this.sortSong.bind(this)\n        this.sortSongReversed = this.sortSongReversed.bind(this)\n    }\n\n    //Add Song\n    addSong = (song) => {\n        const addedSong = {\n            id: this.state.songs.length + 1,\n            title: song.title,\n            artist: song.artist,\n            genre: song.genre,\n            rating: song.rating\n        }\n        this.setState({ songs: this.state.songs.concat(addedSong) })\n    }\n\n    //Remove Song\n    removeSong(id) {\n        const newList = this.state.songs.filter(song => {\n            return id !== Number(song.id)\n        })\n        this.setState({ songs: newList })\n    }\n\n    //Remove All Songs\n    removeList() {\n        this.setState({\n            songs: []\n        })\n    }\n\n    //Sort Songs(title), Artist, Genre, Rating \n    sortSong = (key) => {\n        const songList = [...this.state.songs]\n        songList.sort((a, b) => (a[key].toLowerCase() < b[key].toLowerCase()) ? -1 : 1)\n        this.setState({ songs: songList })\n    }\n\n    sortSongReversed = (key) => {\n        const songList = [...this.state.songs]\n        songList.sort((a, b) => (a[key].toLowerCase() < b[key].toLowerCase()) ? 1 : -1)\n        this.setState({ songs: songList })\n    }\n\n\n    render() {\n        return (\n            <div className=\"song-container\">\n\n                <SongForm\n                    addSong={this.addSong}\n                />\n\n                <SongList\n                    songs={this.state.songs}\n                    addSong={this.addSong}\n                    removeList={this.removeList}\n                    removeSong={this.removeSong}\n                    sortSong={this.sortSong}\n                    sortSongReversed={this.sortSongReversed}\n                />\n\n            </div>\n        )\n    }\n}\n\nexport default SongOverview;"]},"metadata":{},"sourceType":"module"}